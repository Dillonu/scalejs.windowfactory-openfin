define("geometry",[],function(){"use strict";function a(a,b){var c=a;null!=c&&c.constructor!==Number?(this.left=c.left,this.top=c.top):(this.left=a,this.top=b)}function b(a,b,c,d){var e=a;null!=e&&e.constructor!==Number?(null!=e.getBoundingBox&&(e=e.getBoundingBox()),this.left=e.left,this.top=e.top,this.right=e.right,this.bottom=e.bottom):(this.left=a,this.top=b,this.right=c,this.bottom=d)}function c(a){if(null==a)throw"CollisionMesh constructor requires argument 'boxes'";a.constructor!==Array&&(a=[a]),this.boxes=[];for(var d=0;d<a.length;d+=1)a[d].constructor===b?this.boxes.push(a[d]):a[d].constructor===c?this.boxes=this.boxes.concat(a[d].boxes):this.boxes=this.boxes.concat(a[d].getCollisionMesh().boxes)}return a.prototype.clone=function(){return new a(this)},a.prototype.getVector=function(){return this},a.prototype.getBoundingBox=function(){return new b(this.left,this.top,this.left,this.top)},a.prototype.getCollisionMesh=function(){return new c(this.getBoundingBox())},a.prototype.set=function(b){if(null==b)throw"set requires argument 'other'";if(b=b.getVector(),b.constructor!==a)throw"set requires argument 'other' to resolve to type Vector";return this.left=b.left,this.top=b.top,this},a.prototype.add=function(b){if(null==b)throw"add requires argument 'other'";if(b=b.getVector(),b.constructor!==a)throw"add requires argument 'other' to resolve to type Vector";return this.left+=b.left,this.top+=b.top,this},a.prototype.subtract=function(b){if(null==b)throw"subtract requires argument 'other'";if(b=b.getVector(),b.constructor!==a)throw"subtract requires argument 'other' to resolve to type Vector";return this.left-=b.left,this.top-=b.top,this},a.prototype.moveTo=function(a,b){return null!=a&&a.constructor===Number&&(this.left=a),null!=b&&b.constructor===Number&&(this.top=b),this},b.prototype.clone=function(){return new b(this)},b.prototype.getWidth=function(){return Math.abs(this.right-this.left)},b.prototype.getHeight=function(){return Math.abs(this.bottom-this.top)},b.prototype.getSize=function(){return new a(this.getWidth(),this.getHeight())},b.prototype.getPosition=function(){return new a(this.left,this.top)},b.prototype.getBoundingBox=function(){return this},b.prototype.getCollisionMesh=function(){return new c(this)},b.prototype.getCenterPosition=function(){return new a(this.left+this.getWidth()/2,this.top+this.getHeight()/2)},b.prototype.getCenteredOnPosition=function(a){if(null==a)throw"getCenteredOnPosition requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"getCenteredOnPosition requires argument 'other' to resolve to type BoundingBox";return a.getCenterPosition().subtract(this.getCenterPosition().subtract(this.getPosition()))},b.prototype.moveTo=function(b,c){var d=new a(b,c);return null!=d.left&&(this.right=d.left+(this.right-this.left),this.left=d.left),null!=d.top&&(this.bottom=d.top+(this.bottom-this.top),this.top=d.top),this},b.prototype.moveBy=function(b,c){var d=new a(b,c);return null!=d.left&&(this.left+=d.left,this.right+=d.left),null!=d.top&&(this.top+=d.top,this.bottom+=d.top),this},b.prototype.resizeTo=function(b,c){var d=new a(b,c);return null!=d.left&&(this.right=this.left+d.left),null!=d.top&&(this.bottom=this.top+d.top),this},b.prototype.isContains=function(a){if(null==a)throw"isContains requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"isContains requires argument 'other' to resolve to type BoundingBox";return a.left>=this.left&&a.right<=this.right&&a.top>=this.top&&a.bottom<=this.bottom},b.prototype.someContains=function(a){if(null==a)throw"someContains requires argument 'others'";if(a.constructor!==Array)throw"someContains requires argument 'others' of type Array";for(var b=0;b<a.length;b+=1)if(this.isContains(a[b]))return!0;return!1},b.prototype.isTouching=function(a){if(null==a)throw"isTouching requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"isTouching requires argument 'other' to resolve to type BoundingBox";return this.top<=a.bottom&&this.bottom>=a.top&&(this.left===a.right||this.right===a.left)||this.left<=a.right&&this.right>=a.left&&(this.top===a.bottom||this.bottom===a.top)},b.prototype.someTouching=function(a){if(null==a)throw"someTouching requires argument 'others'";if(a.constructor!==Array)throw"someTouching requires argument 'others' of type Array";for(var b=0;b<a.length;b+=1)if(this.isTouching(a[b]))return!0;return!1},b.prototype.isColliding=function(a){if(null==a)throw"isColliding requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"isColliding requires argument 'other' to resolve to type BoundingBox";return this.left<a.right&&this.right>a.left&&this.top<a.bottom&&this.bottom>a.top},b.prototype.someColliding=function(a){if(null==a)throw"someColliding requires argument 'others'";if(a.constructor!==Array)throw"someColliding requires argument 'others' of type Array";for(var b=0;b<a.length;b+=1)if(this.isColliding(a[b]))return!0;return!1},b.prototype.getColliding=function(a){if(null==a)throw"getColliding requires argument 'others'";if(a.constructor!==Array)throw"getColliding requires argument 'others' of type Array";for(var b=0;b<a.length;b+=1)if(this.isColliding(a[b]))return a[b]},b.prototype.isTouchingEdge=function(a){if(null==a)throw"isTouchingEdge requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"isTouchingEdge requires argument 'other' to resolve to type BoundingBox";return this.left===a.right||this.right===a.left||this.top===a.bottom||this.bottom===a.top},c.prototype.clone=function(){for(var a=[],b=0;b<this.boxes;b+=1)a[b]=this.boxes[b].clone();return new c(a)},c.prototype.getWidth=function(){if(0===this.boxes.length)return 0;for(var a=this.boxes[0].left,b=this.boxes[0].right,c=1;c<this.boxes.length;c+=1)a=Math.min(a,this.boxes[c].left),b=Math.max(b,this.boxes[c].right);return b-a},c.prototype.getHeight=function(){if(0===this.boxes.length)return 0;for(var a=this.boxes[0].top,b=this.boxes[0].bottom,c=1;c<this.boxes.length;c+=1)a=Math.min(a,this.boxes[c].top),b=Math.max(b,this.boxes[c].bottom);return b-a},c.prototype.getSize=function(){return new a(this.getWidth(),this.getHeight())},c.prototype.getPosition=function(){return new a(this.getBoundingBox())},c.prototype.getBoundingBox=function(){if(0===this.boxes.length)return 0;for(var a=this.boxes[0].left,c=this.boxes[0].top,d=this.boxes[0].right,e=this.boxes[0].bottom,f=1;f<this.boxes.length;f+=1)a=Math.min(a,this.boxes[f].left),c=Math.min(c,this.boxes[f].top),d=Math.max(d,this.boxes[f].right),e=Math.max(e,this.boxes[f].bottom);return new b(a,c,d,e)},c.prototype.getCollisionMesh=function(){return this},c.prototype.moveTo=function(b,c){var d=new a(b,c);return this.moveBy(d.subtract(this.getPosition())),this},c.prototype.moveBy=function(b,c){for(var d=new a(b||0,c||0),e=0;e<this.boxes.length;e+=1)this.boxes[e].moveBy(d);return this},c.prototype.isContains=function(a){if(null==a)throw"isContains requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"isContains requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1)if(this.boxes[b].someContains(a.boxes))return!0;return!1},c.prototype.isTouching=function(a){if(null==a)throw"isTouching requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"isTouching requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1)if(this.boxes[b].someTouching(a.boxes))return!0;return!1},c.prototype.someTouching=function(a){if(null==a)throw"someTouching requires argument 'others'";if(a.constructor!==Array)throw"someTouching requires argument 'others' to resolve to type Array";for(var b=0;b<a.length;b+=1)if(this.isTouching(a[b]))return!0;return!1},c.prototype.isColliding=function(a){if(null==a)throw"isColliding requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"isColliding requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1)if(this.boxes[b].someColliding(a.boxes))return!0;return!1},c.prototype.getColliding=function(a){if(null==a)throw"getColliding requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"getColliding requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1){var d=this.boxes[b].getColliding(a.boxes);if(d)return d}},c.prototype.someColliding=function(a){if(null==a)throw"someColliding requires argument 'others'";if(a.constructor!==Array)throw"someColliding requires argument 'others' to resolve to type Array";for(var b=0;b<a.length;b+=1)for(var c=0;c<this.boxes.length;c+=1)if(this.boxes[c].isColliding(a[b]))return!0;return!1},{Vector:a,BoundingBox:b,CollisionMesh:c}}),define("openFinManager",[],function(){"use strict";var a=!1,b=[],c={version:"0.0.0.0",majorVersion:0,isReady:function(){return a},onReady:function(c){if(a)return c();if(null==c||c.constructor!==Function)throw"onReady requires argument 'callback' of type Function";b.indexOf(c)>=0||b.push(c)}};return fin.desktop.main(function(){fin.desktop.System.getVersion(function(d){c.version=d,c.majorVersion=+d.split(".")[0],a=!0;for(var e=0;e<b.length;e+=1)b[e]();b=[]})}),c}),define("eventSystem",[],function(){"use strict";function a(a,b){if(null==d[a]&&(d[a]=[]),null==b||b.constructor!==Function)throw"addEventListener requires argument 'eventListener' of type Function";d[a].indexOf(b)>=0||d[a].push(b)}function b(a,b){if(null!=d[a]){if(null==b||b.constructor!==Function)throw"removeEventListener requires argument 'eventListener' of type Function";var c=d[a].indexOf(b);c>=0&&d[a].splice(c,1)}}function c(a,b){if(null!=d[a])for(var c=0;c<d[a].length;c+=1)d[a][c].apply(d[a][c],b)}var d={};return{addEventListener:a,removeEventListener:b,triggerEvent:c}}),define("monitorManager",["./geometry","./eventSystem"],function(a,b){"use strict";function c(a){this.deviceId=a.deviceId,this.name=a.name,this.deviceScaleFactor=a.deviceScaleFactor,this.deviceScaleInvFactor=1/this.deviceScaleFactor,this.displayDeviceActive=a.displayDeviceActive,this.monitorRect=new q(a.monitorRect),this.availableRect=new q(a.availableRect)}function d(){for(var a=[],b=0;b<v.length;b+=1)a[b]=new c(v[b]);return a}function e(){return new c(v[0])}function f(a,b){for(var d=new p(a,b),e=0;e<v.length;e+=1)if(v[e].isContains(d))return new c(v[e])}function g(){return t}function h(){return u}function i(){return new c(n)}function j(a){return a.getCollisionMesh().someColliding(v)}function k(){return s}function l(a){if(s)return a();if(null==a||a.constructor!==Function)throw"onReady requires argument 'callback' of type Function";r.indexOf(a)>=0||r.push(a)}var m,n,o=a.Vector,p=a.Vector,q=a.BoundingBox,r=[],s=!1,t=1,u=1,v=[],w=new p(0,0);return c.prototype.getPosition=function(){return new o(this.monitorRect)},c.prototype.getBounds=function(){return new q(this.monitorRect)},c.prototype.getBoundingBox=c.prototype.getBounds,c.prototype.getCollisionMesh=function(){return this.getBounds().getCollisionMesh()},c.prototype.isContains=function(a){return this.getBoundingBox().isContains(a)},c.prototype.isTouching=function(a){return this.getBoundingBox().isTouching(a)},c.prototype.someTouching=function(a){return this.getBoundingBox().someTouching(a)},c.prototype.isColliding=function(a){return this.getBoundingBox().isColliding(a)},c.prototype.someColliding=function(a){return this.getBoundingBox().someColliding(a)},fin.desktop.main(function(){function a(a){console.debug("The monitor information has changed to: ",a),m=a,t=a.deviceScaleFactor||1,u=1/t,v=[new c(a.primaryMonitor)];for(var d=0;d<a.nonPrimaryMonitors.length;d+=1)v.push(new c(a.nonPrimaryMonitors[d]));s=!0;for(var d=0;d<r.length;d+=1)r[d]();r=[],b.triggerEvent("monitors",[v])}function d(){fin.desktop.System.getMousePosition(function(a){w.moveTo(a),n=f(w.left)||e()})}fin.desktop.System.getMonitorInfo(a),fin.desktop.System.addEventListener("monitor-info-changed",a,void 0,function(a){console.error("Failure to listen for monitor updates: "+a)}),d(),setInterval(d,250)}),{Monitor:c,getMonitors:d,getPrimaryMonitor:e,determineMonitor:f,getDeviceScaleFactor:g,getDeviceScaleInvFactor:h,getMouseMonitor:i,isVisible:j,isReady:k,onReady:l}}),define("windowManager",[],function(){"use strict";function a(a,b){if(r.has(a)){if(null==q[a]&&(q[a]=[]),null==b||b.constructor!==Function)throw"addEventListener requires argument 'eventListener' of type Function";q[a].indexOf(b)>=0||q[a].push(b)}}function b(a,b){if(null!=q[a]){if(null==b||b.constructor!==Function)throw"removeEventListener requires argument 'eventListener' of type Function";var c=q[a].indexOf(b);c>=0&&q[a].splice(c,1)}}function c(a){if(null!=q[a]){for(var b=[],c=1;c<arguments.length;c+=1)b.push(arguments[c]);for(var c=0;c<q[a].length;c+=1)q[a][c].apply(null,b)}}function d(a){o.push(a),c("register",a)}function e(a){p.push(a)}function f(a){var b=o.indexOf(a);b>=0&&(o.splice(b,1),c("remove",a))}function g(a){var b=p.indexOf(a);b>=0&&p.splice(b,1)}function h(a){for(var b=0;b<o.length;b+=1)if(o[b].getTitle()===a)return o[b]}function i(){return o.slice()}function j(){return p.slice()}function k(a){return a.ownerDocument.defaultView.windowWrapper}function l(a){for(var b=0;b<o.length;b+=1)if(o[b]._config.name===a)return o[b]}function m(){var a=4294967295*Math.random()|0,b=4294967295*Math.random()|0,c=4294967295*Math.random()|0,d=4294967295*Math.random()|0;return s[255&a]+s[a>>8&255]+s[a>>16&255]+s[a>>24&255]+"-"+s[255&b]+s[b>>8&255]+"-"+s[b>>16&15|64]+s[b>>24&255]+"-"+s[63&c|128]+s[c>>8&255]+"-"+s[c>>16&255]+s[c>>24&255]+s[255&d]+s[d>>8&255]+s[d>>16&255]+s[d>>24&255]}function n(){for(var a="window"+m(),b=0;b<o.length;b+=1)o[b].getTitle()===a&&(a="window"+m(),b=0);return a}for(var o=[],p=[],q={},r=new Set(["register","remove"]),s=[],t=0;256>t;t++)s[t]=(16>t?"0":"")+t.toString(16);return{addEventListener:a,removeEventListener:b,registerWindow:d,registerApplicationWindow:e,removeWindow:f,removeApplicationWindow:g,getWindow:h,getWindows:i,getApplicationWindows:j,getWindowByElement:k,getWindowByName:l,getUniqueWindowName:n}}),define("BaseWindow",["./geometry","./monitorManager","./windowManager"],function(a,b,c){"use strict";function d(){function a(a){k._bounds=new h(a.left,a.top,a.left+a.width,a.top+a.height),0!==a.changeType&&(k.undock(),k.triggerEvent("resized",k.getBounds(!0))),1!==a.changeType&&k.triggerEvent("moved",k._bounds.getPosition())}function d(a){for(var b=k.getCollisionMeshWindows(),c=new g(a).subtract(k._startDragPos),d=0;d<b.length;d+=1)if(b[d].isReady()&&b[d]._startDragPos){var e=b[d]._startDragPos.clone().add(c);b[d]._window.moveTo(e.left,e.top)}}function e(a,b,e){var f={xDistance:j,yDistance:j,xWindow:void 0,yWindow:void 0,left:a,top:b},i=new h(k._bounds),l=new h(k._bounds),m=k.getCollisionMeshWindows(),o=k.getCollisionMesh(),p=null!=k._parent?k._parent._children:c.getApplicationWindows(),q=[];l.moveTo(a,b),o.moveBy(new g(a,b).subtract(k.getPosition()));for(var r=0;r<p.length;r+=1)m.indexOf(p[r])<0&&p[r].isVisible()&&q.push(p[r]);for(var s=0;s<q.length;s+=1)for(var t=q[s],u=t.getCollisionMeshWindows(),v=0;v<o.boxes.length;v+=1)for(var w=o.boxes[v],x=0;x<u.length;x+=1){var t=u[x],y=new h(t._bounds);if(w.top<=y.bottom&&w.bottom>=y.top){var z=!1;Math.abs(w.left-y.right)<=f.xDistance?(f.left=l.left+y.right-w.left,f.xWindow=t,z=!0):Math.abs(w.right-y.left)<=f.xDistance&&(f.left=l.left+y.left-w.right,f.xWindow=t,z=!0),z&&(f.xDistance=Math.abs(l.left-f.left),Math.abs(w.top-y.top)<=f.yDistance?(f.top=l.top+y.top-w.top,f.yDistance=Math.abs(l.top-f.top),f.yWindow=t):Math.abs(w.bottom-y.bottom)<=f.yDistance&&(f.top=l.top+y.bottom-w.bottom,f.yDistance=Math.abs(l.top-f.top),f.yWindow=t))}if(w.left<=y.right&&w.right>=y.left){var z=!1;Math.abs(w.top-y.bottom)<=f.yDistance?(f.top=l.top+y.bottom-w.top,f.yWindow=t,z=!0):Math.abs(w.bottom-y.top)<=f.yDistance&&(f.top=l.top+y.top-w.bottom,f.yWindow=t,z=!0),z&&(f.yDistance=Math.abs(l.top-f.top),Math.abs(w.left-y.left)<=f.xDistance?(f.left=l.left+y.left-w.left,f.xDistance=Math.abs(l.left-f.left),f.xWindow=t):Math.abs(w.right-y.right)<=f.xDistance&&(f.left=l.left+y.right-w.right,f.xDistance=Math.abs(l.left-f.left),f.xWindow=t))}}var A=k.getCollisionMesh().moveBy(new g(f).subtract(i.getPosition()));if((f.left!==i.left||f.top!==i.top)&&(n=!0,d(f)),e&&n)for(var s=0;s<q.length;s+=1){var t=q[s];A.isTouching(t.toBase().getCollisionMesh())&&k.triggerEvent("_endSnap",t)}}function f(a){r&&a.preventDefault()}function i(){for(var a=p.querySelectorAll("select"),b=0;b<a.length;b+=1)a[b].addEventListener("mousedown",f)}var k=this;this._window.getOptions(function(a){k._config=a,k._config.name&&k.setTitle(k._config.name)}),this._window.addEventListener("closed",function(){if(k._isReady=!1,k._isClosed=!0,k._isVisible=!1,k._parent){var a=k._parent._children.indexOf(k);a>=0&&k._parent._children.splice(a,1),this._parent=void 0}c.removeWindow(k),c.removeApplicationWindow(k),k.triggerEvent("closed"),delete k._eventListeners.closed}),this._window.addEventListener("hidden",function(a){for(var b=0;b<k._children.length;b+=1)k._children[b].hide();k._isVisible=!1,k.triggerEvent("hidden",a)}),this._window.addEventListener("shown",function(a){k._isVisible=!0,k.fitToElement(),k.triggerEvent("shown",a)}),this._window.addEventListener("minimized",function(a){for(var b=0;b<k._children.length;b+=1)k._children[b].isVisible()&&k._children[b].minimize();k._isMinimized=!0,k._isMaximized=!1,k.fitToElement(),k.triggerEvent("minimized",a)}),this._window.addEventListener("restored",function(a){for(var b=0;b<k._children.length;b+=1)(k._children[b]._showOnParentShow||k._children[b].isVisible())&&k._children[b].restore();k._isMinimized=!1,k._isMaximized=!1,k.fitToElement(),k.triggerEvent("restored",a)}),this._window.addEventListener("maximized",function(a){k._isMinimized=!1,k._isMaximized=!0,k.triggerEvent("maximized",a)}),this._window.addEventListener("closed",k.triggerEvent.bind(this,"closed")),this._window.addEventListener("focused",function(a){k._parent&&k._parent.bringToFront(),k.bringToFront(),b.isVisible(k)||k.moveTo(k.getCollisionMesh().getBoundingBox().getCenteredOnPosition(b.getMouseMonitor()));for(var c=0;c<k._children.length;c+=1)k._children[c].bringToFront();k.triggerEvent("focused",a)});var l,m,n,o=this.getContentWindow(!0),p=o.document,q=!1,r=!0,s=[],k=this;o.windowWrapper=this,this._bounds=new h(o.screenLeft,o.screenTop,o.screenLeft+o.outerWidth,o.screenTop+o.outerHeight),this._window.addEventListener("bounds-changed",a),this._window.addEventListener("bounds-changing",a),this._window.addEventListener("disabled-frame-bounds-changed",a),this._window.addEventListener("disabled-frame-bounds-changing",a),this.addEventListener("childremove",function(a){a._addToParentMesh&&this.undock()}),this._dragStartEvent=function(a){if(!a.target.classList.contains("ui-ignore-drag")){q=!0,l=a.x,m=a.y,n=!1,s=[];for(var b=k.getCollisionMeshWindows(),c=0;c<b.length;c+=1)b[c].isReady()&&(s[c]=b[c].getBoundingBox(),b[c]._startDragPos=b[c].getPosition())}},o.addEventListener("mousemove",function(a){if(q){var c=b.getDeviceScaleInvFactor();e(a.screenX*c-l,a.screenY*c-m,!1)}}),o.addEventListener("mouseup",function(a){if(q){q=!1;var c=b.getDeviceScaleInvFactor();e(a.screenX*c-l,a.screenY*c-m,!0);for(var d=k.getCollisionMeshWindows(),f=0;f<d.length;f+=1)delete d[f]._startDragPos}}),i(),o.addEventListener("blur",function(a){r=!0,i(),k.triggerEvent("blurred",a)}),o.addEventListener("click",function(a){if(r){k.fitToElement();for(var b=c.getWindows(),d=0;d<b.length;d+=1)b[d]!==k&&b[d].isChildOf(k)&&b[d]._closeOnLostFocus&&b[d][b[d]._config.hideOnClose?"hide":"close"]();k._parent&&k._parent.bringToFront(),k.triggerEvent("_bringToFront"),k.bringToFront(),k.focus(),$(a.target).is("select")||k._window.bringToFront(),setTimeout(function(){if(i(),$(a.target).is("select")){var b=p.createEvent("MouseEvents");b.initEvent("mousedown",!0,!0),a.target.dispatchEvent(b)}},0);for(var d=0;d<k._children;d+=1)k._children[d]._alwaysAboveParent&&!k._children[d].isVisible()&&(k._children[d].bringToFront(),k._children[d].focus())}r=!1},!0),this._enableWindowZoom&&(p.body.style.zoom=1,o.addEventListener("wheel",function(a){a.ctrlKey&&(a.wheelDeltaY>0?k.zoomIn():a.wheelDeltaY<0&&k.zoomOut())})),this._isReady=!0,this.triggerEvent("ready"),delete this._eventListeners.ready}function e(a){null==a&&(a={});var b=null==a.app_uuid;if(this._config={},this._eventListeners={},this._isReady=!1,this._isClosed=!1,this._isVisible=b?a.autoShow:void 0,this._parent=b?a._parent:void 0,delete a._parent,this._closeOnLostFocus=b?a._closeOnLostFocus:void 0,delete a._closeOnLostFocus,this._showOnParentShow=b?a._showOnParentShow:void 0,delete a._showOnParentShow,this._alwaysAboveParent=b?a._alwaysAboveParent:void 0,delete a._alwaysAboveParent,this._enableWindowZoom=b?a._enableWindowZoom:void 0,delete a._enableWindowZoom,this._gridName=b?a._gridName:void 0,delete a._gridName,this._renderable=b?a._renderable:void 0,delete a._renderable,this._addToParentMesh=b?a._addToParentMesh:void 0,delete a._addToParentMesh,this._fitToElement=b?a._fitToElement:void 0,delete a._fitToElement,this._closeOnParentClose=b?a._closeOnParentClose:void 0,delete a._closeOnParentClose,this._children=[],null!=a.app_uuid){this._window=a;var e=this;this._window.isShowing(function(a){e._isVisible=a}),this._window.getOptions(function(a){e._config=a,e.onDOMReady(d)})}else this._config=a,this._window=new fin.desktop.Window(a,d.bind(this),function(b){console.error(b,a)});if(this._parent){this._parent._children.push(this);var e=this;this._parent.addEventListener("close",function(){e._closeOnParentClose?e.close():this.setParent(e._parent._parent||void 0)})}else c.registerApplicationWindow(this);c.registerWindow(this)}var f=a.Vector,g=a.Vector,h=a.BoundingBox,i=a.CollisionMesh,j=5,k=new Set([]);return e.prototype.toBase=function(){return this},e.prototype.getContentWindow=function(a){if(!a&&!this.isReady())throw"getContentWindow can't be called on an unready window";return this._window.contentWindow},e.prototype.getDocument=function(a){if(!a&&!this.isReady())throw"getDocument can't be called on an unready window";return this.getContentWindow(a).document},e.prototype.getBody=function(a){if(!a&&!this.isReady())throw"getBody can't be called on an unready window";return this.getDocument(a).body},e.prototype.getParent=function(){return this._parent},e.prototype.getChildren=function(){return this._children.slice()},e.prototype.isChildOf=function(a){for(var b=this._parent;null!=b;){if(b===a)return!0;b=b._parent}return!1},e.prototype.getPosition=function(){if(!this.isReady())throw"getPosition can't be called on an unready window";var a=this.getContentWindow();return new f(a.screenLeft,a.screenTop)},e.prototype.getVector=e.prototype.getPosition,e.prototype.getWidth=function(){if(!this.isReady())throw"getWidth can't be called on an unready window";return this.getContentWindow().outerWidth},e.prototype.getHeight=function(){if(!this.isReady())throw"getHeight can't be called on an unready window";return this.getContentWindow().outerHeight},e.prototype.getSize=function(){return new f(this.getWidth(),this.getHeight())},e.prototype.getCollisionMeshWindows=function(){if(!this.isReady())throw"getCollisionMesh can't be called on an unready window";for(var a=[this],b=0;b<this._children.length;b+=1)this._children[b]._addToParentMesh&&(a=a.concat(this._children[b].getCollisionMeshWindows()));return a},e.prototype.getCollisionMesh=function(){for(var a=[this.getBoundingBox()],b=0;b<this._children.length;b+=1)this._children[b]._addToParentMesh&&a.push(this._children[b].getBoundingBox());return new i(a)},e.prototype.getBounds=function(a){if(!a&&!this.isReady())throw"getBoundingBox can't be called on an unready window";return new h(this._bounds)},e.prototype.getBoundingBox=function(){return new h(this._bounds)},e.prototype.getMonitor=function(){return this.getCollisionMesh().getColliding(b.getMonitors())},e.prototype.addEventListener=function(a,b){if(this._isClosed)throw"onDOMReady can't be called on a closed window";if(a=a.toLowerCase(),!k.has(a)){if(null==this._eventListeners[a]&&(this._eventListeners[a]=[]),null==b||b.constructor!==Function)throw"addEventListener requires argument 'eventListener' of type Function";this._eventListeners[a].indexOf(b)>=0||this._eventListeners[a].push(b)}},e.prototype.removeEventListener=function(a,b){if(a=a.toLowerCase(),null!=this._eventListeners[a]){if(null==b||b.constructor!==Function)throw"removeEventListener requires argument 'eventListener' of type Function";var c=this._eventListeners[a].indexOf(b);c>=0&&this._eventListeners[a].splice(c,1)}},e.prototype.clearEvent=function(a){a=a.toLowerCase(),this._eventListeners[a]=[]},e.prototype.triggerEvent=function(a){if(a=a.toLowerCase(),null!=this._eventListeners[a]){for(var b=[],c=1;c<arguments.length;c+=1)b.push(arguments[c]);for(var c=0;c<this._eventListeners[a].length;c+=1)this._eventListeners[a][c].apply(this,b)}},e.prototype.isReady=function(){return this._isReady},e.prototype.isVisible=function(){return this._isVisible},e.prototype.isHidden=function(){return!this._isVisible},e.prototype.isMinimized=function(){return this._isMinimized},e.prototype.isRestored=function(){return!this._isMinimized&&!this._isMaximized},e.prototype.isMaximized=function(){return this._isMaximized},e.prototype.isClosed=function(){return this._isClosed},e.prototype.onReady=function(a){if(this.isClosed())throw"onReady can't be called on a closed window";this.isReady()?a.call(this):this.addEventListener("ready",a)},e.prototype.onDOMReady=function(a){if(this.isClosed())throw"onDOMReady can't be called on a closed window";var b=this.getContentWindow(!0);null==b?setTimeout(this.onDOMReady.bind(this,a),5):"complete"!==b.document.readyState?b.addEventListener("load",a.bind(this),!1):a.call(this)},e.prototype.getTitle=function(){var a=this._config.name||"";if(!this.isReady())return a;var b=this.getDocument().getElementById("ui-title");return null!=b?b.innerHTML||a:a},e.prototype.setTitle=function(a){if(null!=a){var b=this.getDocument(),c=b.getElementById("ui-title");null==c&&(c=b.createElement("title"),c.id="ui-title",b.head.appendChild(c)),c.innerHTML=a||this._config.name||""}},e.prototype.getZoom=function(){return this.getDocument().body.style.zoom||1},e.prototype.setZoom=function(a){this.getDocument().body.style.zoom=a,this.triggerEvent("zoom",arguments)},e.prototype.zoomIn=function(){var a=this.getDocument();a.body.style.zoom=1.1*(a.body.style.zoom||1),this.triggerEvent("zoom",arguments)},e.prototype.zoomOut=function(){var a=this.getDocument();a.body.style.zoom=(a.body.style.zoom||1)/1.1,this.triggerEvent("zoom",arguments)},e.prototype.fitToElement=function(a){if(!this.isMaximized()&&(null==a&&(a=this._fitToElement),null!=a)){var b=$(a,this.getDocument());this._window.resizeTo(b.outerWidth(!0),b.outerHeight(!0),"top-left"),this._bounds.resizeTo(b.outerWidth(!0),b.outerHeight(!0))}},e.prototype.addDraggableElements=function(a){null!=a&&this.onReady(function(){a.constructor===String&&(a=this.getDocument().querySelectorAll(a));for(var b=0;b<a.length;b+=1)a[b].addEventListener("mousedown",this._dragStartEvent)})},e.prototype.addDefaultDraggableElements=function(){this.addDraggableElements(this.getDocument().querySelectorAll(".ui-draggable"))},e.prototype.moveTo=function(a,c,d,e){var h=new f(a,c);if(this.getCollisionMesh().moveTo(h).someColliding(b.getMonitors())){this._window.moveTo(h.left,h.top,d,e);for(var i=new g(a,c).subtract(this.getPosition()),j=0;j<this._children.length;j+=1)this._children[j]._addToParentMesh&&this._children[j].moveTo(i.add(this._children[j].getPosition()))}},e.prototype.close=function(){this._window.close.apply(this._window,arguments)},e.prototype.minimize=function(){this._window.minimize.apply(this._window,arguments)},e.prototype.maximize=function(){this._window.maximize.apply(this._window,arguments)},e.prototype.show=function(){this._window.show.apply(this._window,arguments)},e.prototype.showAt=function(){this._window.showAt.apply(this._window,arguments)},e.prototype.restore=function(){this._window.restore.apply(this._window,arguments)},e.prototype.resizeTo=function(){this._window.resizeTo.apply(this._window,arguments)},e.prototype.setBounds=function(){return this.isClosed()?console.warn("Window is closed!"):void this._window.setBounds.apply(this._window,arguments)},e.prototype.hide=function(){this._window.hide.apply(this._window,arguments)},e.prototype.bringToFront=function(a,b){function c(){for(var b=0;b<this._children.length;b+=1)this._children[b]._alwaysAboveParent&&this._children[b].isVisible()&&this._children[b].bringToFront();null!=a&&a()}this._window.bringToFront(c.bind(this),b)},e.prototype.focus=function(){this._window.focus.apply(this._window,arguments)},e.prototype.updateOptions=function(){this._window.updateOptions.apply(this._window,arguments)},e.prototype.setParent=function(a){if(a!=this._parent){if(this._parent){var b=this._parent._children.indexOf(this);b>=0&&(this._parent._children.splice(b,1),this._parent.triggerEvent("childremove",this)),this._parent=void 0}else c.removeApplicationWindow(this);null==a?c.registerApplicationWindow(this):(this._parent=a,this._parent._children.push(this),this._parent.triggerEvent("childadd",this)),this.triggerEvent("parentset",this._parent)}},e.prototype.addChild=function(a){a.setParent(this)},e}),define("DockWindow",["./geometry","./monitorManager","./BaseWindow"],function(a,b,c){"use strict";function d(a){c.apply(this,arguments),this._dockedGroup=[this],this._isDocked=!1,this.addEventListener("_bringToFront",function(){for(var a=0;a<this._dockedGroup.length;a+=1)this!==this._dockedGroup[a]&&this._dockedGroup[a].bringToFront()}),this.addEventListener("_bringChildrenToFront",function(){for(var a=0;a<this._dockedGroup.length;a+=1){var b=this._dockedGroup[a];if(this!==b)for(var c=0;c<b._children.length;c+=1)b._children[c]._alwaysAboveParent&&!b._children[c].isVisible()&&(b._children[c].bringToFront(),b._children[c].focus())}}),this.addEventListener("hidden",this.undock),this.addEventListener("minimized",this.undock),this.addEventListener("maximized",this.undock),this.addEventListener("closed",this.undock),this.addEventListener("_endSnap",this.dock)}var e=a.Vector,f=a.Vector,g=a.CollisionMesh;return d.prototype=Object.create(c.prototype),d.prototype.constructor=d,d.prototype.toBase=function(){var a={};for(var b in this)this.hasOwnProperty(b)&&(a[b]=this[b]);return a.__proto__=c.prototype,a},d.prototype.dock=function(a){if(!(a instanceof d))throw"dock requires argument 'other' to be of type DockWindow";if(!(this._dockedGroup.indexOf(a)>=0)){for(var b=a._dockedGroup,c=0;c<b.length;c+=1)this._dockedGroup.indexOf(b[c])<0&&(this._dockedGroup.push(b[c]),b[c]._dockedGroup=this._dockedGroup);for(var c=0;c<this._dockedGroup.length;c+=1)this._dockedGroup[c]._isDocked=!0}},d.prototype.undock=function(){if(1!==this._dockedGroup.length){for(var a=this._dockedGroup,b=0;b<a.length;b+=1)a[b]._dockedGroup=[a[b]],a[b]._isDocked=!1;var c=a.indexOf(this);c>=0&&a.splice(c,1);for(var b=0;b<a.length;b+=1)for(var d=a[b],e=0;e<a.length;e+=1)a[e]!==d&&d.getCollisionMesh().isTouching(a[e])&&d.dock(a[e])}},d.prototype.getCollisionMeshWindows=function(a){if(!this.isReady())throw"getCollisionMesh can't be called on an unready window";for(var b=[this],c=0;c<this._children.length;c+=1)this._children[c]._addToParentMesh&&(b=b.concat(this._children[c].getCollisionMeshWindows()));if(!a)for(var c=0;c<this._dockedGroup.length;c+=1)this._dockedGroup[c]!==this&&(b=b.concat(this._dockedGroup[c].getCollisionMeshWindows(!0)));return b},d.prototype.getCollisionMesh=function(){if(!this.isReady())throw"getCollisionMesh can't be called on an unready window";for(var a=[],b=0;b<this._dockedGroup.length;b+=1)a=a.concat(this._dockedGroup[b].toBase().getCollisionMesh().boxes);return new g(a)},d.prototype.getBoundingBox=function(){if(!this.isReady())throw"getBoundingBox can't be called on an unready window";
return this.getCollisionMesh().getBoundingBox()},d.prototype.moveTo=function(a,c,d,g){var h=new e(a,c);if(this.getCollisionMesh().moveTo(h).someColliding(b.getMonitors())){for(var i=new f(a,c).subtract(this.getPosition()),j=0;j<this._children.length;j+=1)this._children[j]._addToParentMesh&&this._children[j].moveTo(i.clone().add(this._children[j].getPosition()));for(var j=0;j<this._dockedGroup.length;j+=1)this._dockedGroup[j]!=this&&this._dockedGroup[j].toBase().moveTo(i.clone().add(this._dockedGroup[j].getPosition()));var k=i.clone().add(this.getPosition());this.toBase().moveTo(k.left,k.top,d,g)}},d.prototype.isDocked=function(){return this._isDocked},d}),define("scalejs.windowfactory-openfin",["scalejs!core","./geometry","./openFinManager","./monitorManager","./windowManager","./BaseWindow","./DockWindow"],function(a,b,c,d,e,f,g){"use strict";function h(){return l}function i(a){if(h())return a();if(null==a||a.constructor!==Function)throw"onReady requires argument 'callback' of type Function";m.indexOf(a)>=0||m.push(a)}function j(){return k}var k,l=!1,m=[];fin.desktop.main(function(){fin.desktop.Application.getCurrent();k=new g(fin.desktop.Window.getCurrent()),k._isSetup=!0,k.onSetup=function(a){k._isSetup?a.call(this):this.addEventListener("setup",a)},d.onReady(function(){c.onReady(function(){l=!0;for(var a=0;a<m.length;a+=1)m[a]();m=[]})})}),a.registerExtension({windowfactory:{Vector:b.Vector,Position:b.Vector,Size:b.Vector,BaseWindow:f,DockWindow:g,monitorManager:d,windowManager:e,openFinManager:c,getMainWindow:j,onReady:i,isReady:h}})});